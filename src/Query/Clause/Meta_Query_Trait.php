<?php
declare( strict_types=1 );

namespace Lipe\Lib\Query\Clause;

/**
 * Shared properties and methods for working with `meta_query`.
 *
 * @since 4.0.0
 *
 * @template COMPARE_OPERATOR of '='|'!='|'>'|'>='|'<'|'<='
 * @template COMPARE_WORD of 'LIKE'|'NOT LIKE'|'IN'|'NOT IN'|'BETWEEN'|'NOT BETWEEN'|'EXISTS'|'NOT EXISTS'|''
 * @template COMPARE_REGEX of 'REGEXP'|'NOT REGEXP'|'RLIKE'
 *
 */
trait Meta_Query_Trait {
	/**
	 * Meta key or keys to filter by.
	 *
	 * @var string|array<int,string>
	 */
	public $meta_key;

	/**
	 * Meta value or values to filter by.
	 *
	 * @var string|array<int,string>
	 */
	public $meta_value;

	/**
	 * MySQL operator used for comparing the meta value.
	 *
	 * Default is 'IN' when `meta_value` is an array, '=' otherwise.
	 *
	 * @phpstan-var COMPARE_OPERATOR|COMPARE_WORD|COMPARE_REGEX
	 *
	 * @var string
	 */
	public string $meta_compare;

	/**
	 * MySQL operator used for comparing the meta key.
	 *
	 * Default is 'IN' when `meta_key` is an array, '=' otherwise.
	 *
	 * @phpstan-var 'LIKE'|'NOT LIKE'|'IN'|'NOT IN'|'BETWEEN'|'NOT BETWEEN'|'EXISTS'|'NOT EXISTS'|''
	 *
	 * @var string
	 */
	public string $meta_compare_key;

	/**
	 * The MySQL data type that the `meta_value` column will be CAST to for comparisons.
	 *
	 * @phpstan-var 'NUMERIC'|'BINARY'|'CHAR'|'DATE'|'DATETIME'|'DECIMAL'|'SIGNED'|'TIME'|'UNSIGNED'|''
	 *
	 * @var string
	 */
	public string $meta_type;

	/**
	 * The MySQL data type that the `meta_key` column will be CAST to for comparisons.
	 *
	 * @phpstan-var 'BINARY'|''
	 *
	 * @var string
	 */
	public string $meta_type_key;

	/**
	 * Meta query generated by `meta_query()`.
	 *
	 * @internal
	 *
	 * @see self::meta_query()
	 *
	 * @var array
	 */
	public array $meta_query;


	/**
	 * Generate the `meta_query` clauses.
	 *
	 * @link https://developer.wordpress.org/reference/classes/wp_query/#custom-field-post-meta-parameters
	 *
	 * @return Meta_Query
	 */
	public function meta_query() : Meta_Query {
		$query = new Meta_Query();
		$this->clauses[] = $query;
		return $query;
	}
}
